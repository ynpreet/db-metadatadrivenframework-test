DataEngineeringProject/
│
├── includes/
│   ├── common_functions
│   │   └── (Notebook) common_functions
│   │       - Purpose: 
│   │         1. Define reusable PySpark functions for each stage of the data pipeline:
│   │            - Source → Landing
│   │            - Landing → Bronze
│   │            - Bronze → Silver
│   │            - Silver → Gold
│   │            - Gold → RCO_DW
│   │         2. Provide a single location for all transformation logic used by downstream notebooks.
│   │
│   └── configuration
│       └── (Notebook) configuration
│           - Purpose:
│             1. Store all project configurations (file paths, table names, schema/catalog details, etc.).
│             2. Create or update catalogs and schemas in your metastore.
│             3. Load config data (currently in CSVs) and persist them into Delta tables.
│             4. Create or initialize Delta tables for logging and auditing (job status, record counts, etc.).
│
├── ingestion/
│   └── (Notebook) source_to_landing_control_table
│       - Purpose:
│         1. Orchestrator for ingesting data from source systems (files, databases, APIs) into the "landing" zone.
│         2. Calls the relevant function(s) in `common_functions`.
│         3. Reads config details (paths, table names, etc.) from `configuration`.
│
├── bronze/
│   └── (Notebook) landing_to_bronze_control_table
│       - Purpose:
│         1. Orchestrator for moving raw data from the landing zone into the "bronze" layer.
│         2. Optionally performs basic data cleanup or validation.
│         3. Leverages the ingestion functions from `common_functions`.
│
├── silver/
│   ├── (Notebook) bronze_to_silver_control_table
│   │   - Purpose:
│   │     1. Orchestrator for transformations from the "bronze" layer to the "silver" layer.
│   │     2. Calls and chains logic from `common_functions` for standardized transformations.
│   │     3. Aggregates or enriches data before persisting in the silver layer.
│   │
│   ├── (Notebook) business_logic_for_tableA
│   │   - Purpose:
│   │     - Contains specific transformation rules or business logic for “Table A.”
│   │     - Referenced by `bronze_to_silver_control_table`.
│   │
│   └── (Notebook) business_logic_for_tableB
│       - Purpose:
│         - Similar to `business_logic_for_tableA`, but for “Table B” or another domain-specific logic.
│         - Separates logic by domain or functional area.
│
├── gold/
│   ├── (Notebook) silver_to_gold_control_table
│   │   - Purpose:
│   │     1. Orchestrator for moving cleansed/conformed data from the silver layer to the “gold” layer.
│   │     2. Uses `common_functions` for consistent transformations.
│   │     3. Finalizes data into a presentation-ready format (e.g., star schema, aggregates).
│   │
│   ├── (Notebook) business_logic_for_tableX
│   │   - Purpose:
│   │     - Advanced transformations or additional logic for “Table X” in the gold layer.
│   │     - Called by `silver_to_gold_control_table`.
│   │
│   └── (Notebook) business_logic_for_tableY
│       - Purpose:
│         - Same concept as above but for “Table Y.”
│         - Called by `silver_to_gold_control_table`.
│
└── RCO_DW/
    └── (Notebook) gold_to_RCO_DW_control_table
        - Purpose:
          1. Orchestrator for loading data from the gold layer into the RCO_DW (Data Warehouse) schema.
          2. Calls the “Gold → RCO_DW” function in `common_functions` (if applicable).
          3. May include additional transformations specific to RCO_DW’s structure.
